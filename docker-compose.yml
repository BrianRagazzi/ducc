version: '3'

services:
    # uaa: # Org Image
    #     image: pcfseceng/uaa:latest
    #     ports:
    #         - 8008:8080
    #     volumes:
    #         - ./config/uaa/uaa-org.yml:/import/uaa.yml
    #     command:
    #         - bash
    #         - -c
    #         - "cp /import/uaa.yml /uaa/uaa.yml && 
    #                 sed -i 's/((credhub_client_secret))/${CREDHUB_CLIENT_SECRET}/g' /uaa/uaa.yml &&    
    #                 catalina.sh run"
    uaa: # new
        image: cfidentity/uaa:74.13.0
        ports:
            - 8008:8080
        volumes:
            - ./config/uaa/uaa-new.yml:/import/uaa.yml
        entrypoint: /bin/bash -c
        command:
            - "cp /import/uaa.yml /home/vcap/uaa.yml && 
                    sed -i 's/((credhub_client_secret))/${CREDHUB_CLIENT_SECRET}/g' /home/vcap/uaa.yml &&
                    /cnb/lifecycle/launcher" 
        environment:
            # LOGIN_CONFIG_URL: classpath:/uaa/uaa.yml 
            UAA_CONFIG_FILE: /home/vcap/uaa.yml
            BPL_TOMCAT_ACCESS_LOGGING: enabled
    db:
        image: postgres:9.6
        environment:
            POSTGRES_DB: credhub
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    credhub:
        image: credhub/credhub:local
        volumes:
        - ./config/credhub/:/etc/config/
        depends_on: [db, uaa]
        links:
            - db
            - uaa
        ports:
        - "9000:9000"
        environment:
            CREDHUB_AUTH_SERVER_EXTERNAL_URL: http://${HOSTNAME}:8008 #/uaa
            CREDHUB_AUTH_SERVER_INTERNAL_URL: http://uaa:8080/uaa
            TRUST_STORE_PASSWORD: changeit # CANNOT BE CHANGED CURRENTLY!!! ${TRUST_STORE_PASSWORD}
            ENCRYPTION_PASSWORD: ${ENCRYPTION_PASSWORD}
            LOG_LEVEL: debug
            DATABASE: postgres
            DATABASE_USERNAME: admin
            DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
            DATABASE_URL: jdbc:postgresql://db:5432/credhub?autoReconnect=true
    concourse-db:
        image: postgres:9.6
        environment:
            POSTGRES_DB: concourse
            POSTGRES_PASSWORD: concourse_pass
            POSTGRES_USER: concourse_user
            PGDATA: /database
    concourse:
        image: concourse/concourse
        command: quickstart
        privileged: true
        depends_on: [concourse-db, credhub]
        ports: ["8080:8080"]
        environment:
            CONCOURSE_POSTGRES_HOST: concourse-db
            CONCOURSE_POSTGRES_USER: concourse_user
            CONCOURSE_POSTGRES_PASSWORD: concourse_pass
            CONCOURSE_POSTGRES_DATABASE: concourse
            CONCOURSE_EXTERNAL_URL: http://${HOSTNAME}:8080
            CONCOURSE_ADD_LOCAL_USER: admin:${CONCOURSE_ADMIN_PASSWORD}
            CONCOURSE_MAIN_TEAM_LOCAL_USER: admin
            CONCOURSE_WORKER_BAGGAGECLAIM_DRIVER: overlay
            CONCOURSE_CREDHUB_URL: https://${HOSTNAME}:9000
            CONCOURSE_CREDHUB_INSECURE_SKIP_VERIFY: "true"
            # useCaCert: "false"
            CONCOURSE_CREDHUB_CLIENT_ID: credhub_client
            CONCOURSE_CREDHUB_CLIENT_SECRET: ${CREDHUB_CLIENT_SECRET}
    minio:
        image: minio/minio
        volumes:
            - "/minio:/data" # This depends on a 
        ports:
            - "9080:9000"
        environment:
            MINIO_ACCESS_KEY: minio
            MINIO_SECRET_KEY: minio123
        command: server /data
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3
